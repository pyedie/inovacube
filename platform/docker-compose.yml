version: "3.9"
name: inovacube
services:
  traefik:
    image: traefik:v3.1
    command:
      - --api.dashboard=true
      - --api.insecure=true
      - --providers.docker=true
      - --entrypoints.web.address=:80
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks: [edge]

  mongo:
    image: mongo:7
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASS}
    volumes: [ "mongo_data:/data/db" ]
    networks: [data]

  redis:
    image: redis:7
    command: ["redis-server","--requirepass","${REDIS_PASS}"]
    networks: [data]

  rabbitmq:
    image: rabbitmq:3.13-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBIT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBIT_PASS}
    ports: ["15672:15672"]
    networks: [data,core]

  auth:
    build: ../apps/auth
    ports:
      - "3001:3001"
    env_file: ./.env
    networks: [core, data, edge]
    volumes:
      - ../secrets/jwtRS256.key:/run/keys/jwtRS256.key:ro
      - ../secrets/jwtRS256.key.pub:/run/keys/jwtRS256.key.pub:ro
    environment:
      JWT_PRIVATE_KEY_FILE: /run/keys/jwtRS256.key
      JWT_PUBLIC_KEY_FILE: /run/keys/jwtRS256.key.pub
      JWT_TTL_MINUTES: "15"
    labels:
      - traefik.enable=true
      - traefik.docker.network=inovacube_edge
      - traefik.http.services.auth-svc.loadbalancer.server.port=3001
      - traefik.http.routers.auth.rule=PathPrefix(`/auth`)
      - traefik.http.routers.auth.entrypoints=web
      - traefik.http.routers.auth.service=auth-svc

  api-gateway:
    build: ../apps/api-gateway
    env_file: ./.env
    depends_on: [mongo, redis, rabbitmq]
    networks: [core, data, edge]
    volumes:
      - ../secrets/jwtRS256.key.pub:/run/keys/jwtRS256.key.pub:ro
    environment:
      JWT_PUBLIC_KEY_FILE: /run/keys/jwtRS256.key.pub
      JWT_ISSUER: inovacube-auth
      JWT_AUDIENCE: inovacube-services
      REDIS_URL: redis://default:${REDIS_PASS}@redis:6379
    labels:
      - traefik.enable=true
      - traefik.docker.network=inovacube_edge
      - traefik.http.services.api-gw.loadbalancer.server.port=3000
      - traefik.http.routers.api.rule=PathPrefix(`/api`)
      - traefik.http.routers.api.entrypoints=web
      - traefik.http.routers.api.service=api-gw
      - traefik.http.routers.api-health.rule=PathPrefix(`/healthz`)
      - traefik.http.routers.api-health.entrypoints=web
      - traefik.http.routers.api-health.service=api-gw

  profiles:
    build: ../apps/profiles
    ports:
      - "3002:3002"
    env_file: ./.env
    networks: [core, data, edge]
    volumes:
      - ../secrets/jwtRS256.key.pub:/run/keys/jwtRS256.key.pub:ro
    environment:
      JWT_PUBLIC_KEY_FILE: /run/keys/jwtRS256.key.pub
      JWT_ISSUER: inovacube-auth
      JWT_AUDIENCE: inovacube-services
      MONGO_URI: mongodb://${MONGO_USER}:${MONGO_PASS}@mongo:27017/${MONGO_DB}?authSource=admin
      REDIS_URL: redis://default:${REDIS_PASS}@redis:6379
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3002/livez"]
      interval: 10s
      timeout: 3s
      retries: 5
    labels:
      - traefik.enable=true
      - traefik.docker.network=inovacube_edge
      - traefik.http.services.profiles-svc.loadbalancer.server.port=3002
      - traefik.http.routers.profiles.rule=PathPrefix(`/api/v1/me`)
      - traefik.http.routers.profiles.entrypoints=web
      - traefik.http.routers.profiles.service=profiles-svc

    # --------- PAPER LOBBY ----------
  paper-lobby:
    image: itzg/minecraft-server:java21
    environment:
      EULA: "TRUE"
      TYPE: "PAPER"
      VERSION: "1.21.1"
      MEMORY: "2G"
      ONLINE_MODE: "FALSE"          # impératif derrière proxy
      ENFORCE_SECURE_PROFILE: "FALSE"  # évite les soucis secure-profile avec proxy
      SERVER_NAME: "Lobby"
      MOTD: "InovaCube Lobby"
      ENABLE_COMMAND_BLOCK: "true"
      VIEW_DISTANCE: 8
    volumes:
      - paper_lobby_data:/data
      - ./paper/paper-global.yml:/config/paper-global.yml:ro
    networks: [ core ]
    restart: unless-stopped


  # --------- VELOCITY PROXY ----------
  proxy:
    image: itzg/mc-proxy:latest
    depends_on: [ paper-lobby ]
    ports:
      - "25565:25577"                      # client -> proxy (bind 25577 côté Velocity)
    environment:
      TYPE: "VELOCITY"
      REPLACE_ENV_VARIABLES: "TRUE"        # remplace ${...} dans /config
      CFG_BIND: "0.0.0.0:25577"            # on force le bind
      CFG_FORWARDING_MODE: "modern"
    volumes:
      - proxy_data:/server
      - ./velocity/velocity.toml:/config/velocity.toml:ro
      - ./velocity/forwarding.secret:/config/forwarding.secret:ro
    networks: [ core ]
    restart: unless-stopped
networks:
  edge: {}
  core: {}
  data: {}
  
volumes:
  mongo_data: {}
  redis_data: {}
  paper_lobby_data: {}
  proxy_data: {}